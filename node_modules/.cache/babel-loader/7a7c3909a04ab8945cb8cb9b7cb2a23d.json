{"ast":null,"code":"var _jsxFileName = \"/Users/Master/mysite/src/Components/Graph/index.js\";\nimport React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      figure: {\n        data: [{\n          x: [],\n          y: [],\n          type: 'bar',\n          marker: {\n            color: \"white\"\n          }\n        }],\n        layout: {\n          height: 500,\n          width: 900,\n          title: \"Area chart\",\n          paper_bgcolor: 'linear-gradient(58deg,rgb(152, 205, 255) 0%,rgb(239, 199, 255) 80%)',\n          plot_bgcolor: 'linear-gradient(58deg,rgb(152, 205, 255) 0%,rgb(239, 199, 255) 80%)',\n          font: {\n            family: \"Arial\",\n            size: 18,\n            color: \"white\"\n          },\n          xaxis: {\n            range: [0, 10],\n            zerolinecolor: \"white\",\n            gridcolor: \"white\"\n          },\n          yaxis: {\n            range: [0, 10],\n            zerolinecolor: \"white\",\n            gridcolor: \"white\"\n          }\n        }\n      },\n      title: [],\n      year: [],\n      age_rating: [],\n      imdb_rating: [],\n      on_netflix: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/').then(res => {\n      const nflix = res.data;\n      const title = [];\n      const year = [];\n      const age_rating = [];\n      const imdb_rating = [];\n      const on_netflix = [];\n      nflix.map(movie => (title.push(movie.title), year.push(movie.year), age_rating.push(movie.age_rating), imdb_rating.push(movie.imdb_rating), on_netflix.push(movie.on_netflix)));\n      this.setState({\n        figure: {\n          Data: [{\n            x: title,\n            y: imdb_rating\n          }]\n        },\n        title: title,\n        year: year,\n        age_rating: age_rating,\n        imdb_rating: imdb_rating,\n        on_netflix: on_netflix\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Plot, {\n        data: this.state.figure.data,\n        layout: this.state.figure.layout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/Users/Master/mysite/src/Components/Graph/index.js"],"names":["React","Plot","axios","Graph","Component","constructor","props","state","figure","data","x","y","type","marker","color","layout","height","width","title","paper_bgcolor","plot_bgcolor","font","family","size","xaxis","range","zerolinecolor","gridcolor","yaxis","year","age_rating","imdb_rating","on_netflix","componentDidMount","get","then","res","nflix","map","movie","push","setState","Data","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\n\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        figure: {\n            data: [\n                {\n                x: [],\n                y: [],\n                type: 'bar',\n                marker: { color: \"white\"}\n                }],\n            layout: {\n                height: 500,\n                width: 900,\n                title: \"Area chart\",\n                paper_bgcolor: 'linear-gradient(58deg,rgb(152, 205, 255) 0%,rgb(239, 199, 255) 80%)',\n                plot_bgcolor: 'linear-gradient(58deg,rgb(152, 205, 255) 0%,rgb(239, 199, 255) 80%)',\n                font: {family: \"Arial\",size: 18, color:\"white\"},\n                xaxis: {range: [0, 10], zerolinecolor: \"white\", gridcolor: \"white\"},\n                yaxis: {range: [0, 10], zerolinecolor: \"white\", gridcolor: \"white\"}\n            }\n        },\n        title: [],\n        year: [],\n        age_rating: [],\n        imdb_rating: [],\n        on_netflix: []\n    };\n  }\n\n  componentDidMount() {\n      axios.get('http://localhost:8000/api/')\n      .then(res => {\n          const nflix = res.data;\n          const title = [];\n          const year = [];\n          const age_rating = [];\n          const imdb_rating = [];\n          const on_netflix = [];\n          nflix.map((movie) => (\n              title.push(movie.title),\n              year.push(movie.year),\n              age_rating.push(movie.age_rating),\n              imdb_rating.push(movie.imdb_rating),\n              on_netflix.push(movie.on_netflix)\n          ));\n        this.setState({figure: {Data: [{x: title , y: imdb_rating}]}, title: title, year: year, age_rating: age_rating, imdb_rating: imdb_rating, on_netflix: on_netflix});\n      })\n  }\n  render() {\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <Plot\n          data={this.state.figure.data}\n          layout={this.state.figure.layout}\n        />\n      </div>\n    );\n  }\n}\nexport default Graph;"]},"metadata":{},"sourceType":"module"}