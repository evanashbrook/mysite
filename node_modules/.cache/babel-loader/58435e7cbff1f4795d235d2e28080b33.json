{"ast":null,"code":"var _jsxFileName = \"/Users/Master/mysite/src/Components/Graph/index.js\";\nimport React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        type: 'bar',\n        x: [],\n        y: [],\n        width: [1, 1, 1]\n      }],\n      layout: {\n        paper_bgcolor: 'rgb(97, 92, 87)',\n        plot_bgcolor: 'rgb(97, 92, 87)',\n        font: {\n          family: \"Arial\",\n          size: \"15\",\n          color: \"rgb(253, 237, 165)\"\n        },\n        xaxis: {\n          showticklabels: false\n        },\n        yaxis: {\n          range: [0, 10],\n          zerolinecolor: \"rgb(253, 237, 165)\",\n          dtick: .5\n        }\n      },\n      config: {\n        responsive: true\n      },\n      titles: [],\n      years: [],\n      age_ratings: [],\n      imdb_ratings: [],\n      on_netflixs: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://ea-mysite-backend.herokuapp.com/api/').then(res => {\n      const nflix = res.data;\n      const title = [];\n      const year = [];\n      const age_rating = [];\n      const imdb_rating = [];\n      const on_netflix = [];\n      nflix.map(movie => (title.push(movie.title), year.push(movie.year), age_rating.push(movie.age_rating), imdb_rating.push(movie.imdb_rating), on_netflix.push(movie.on_netflix)));\n      this.setState({\n        data: [{\n          x: title.slice(0, 50),\n          y: imdb_rating.slice(0, 50),\n          text: title.slice(0, 50),\n          textposition: 'auto',\n          textangle: 90,\n          type: 'bar',\n          marker: {\n            color: \"rgb(255, 208, 0)\"\n          }\n        }],\n        layout: {\n          paper_bgcolor: 'rgb(97, 92, 87)',\n          plot_bgcolor: 'rgb(97, 92, 87)',\n          font: {\n            family: \"Arial\",\n            size: \"15\",\n            color: \"rgb(253, 237, 165)\"\n          },\n          xaxis: {\n            showticklabels: false\n          },\n          yaxis: {\n            range: [0, 10],\n            zerolinecolor: \"rgb(253, 237, 165)\"\n          }\n        },\n        config: {\n          responsive: true\n        },\n        titles: title,\n        years: year,\n        age_ratings: age_rating,\n        imdb_ratings: imdb_rating,\n        on_netflixs: on_netflix\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pltttle\",\n        children: \"Neftlix IMDB Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: this.state.data,\n          layout: this.state.layout,\n          onInitialized: figure => this.setState(figure),\n          onUpdate: figure => this.setState(figure)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/Users/Master/mysite/src/Components/Graph/index.js"],"names":["React","Plot","axios","defaults","xsrfCookieName","xsrfHeaderName","Graph","Component","constructor","props","state","data","type","x","y","width","layout","paper_bgcolor","plot_bgcolor","font","family","size","color","xaxis","showticklabels","yaxis","range","zerolinecolor","dtick","config","responsive","titles","years","age_ratings","imdb_ratings","on_netflixs","componentDidMount","get","then","res","nflix","title","year","age_rating","imdb_rating","on_netflix","map","movie","push","setState","slice","text","textposition","textangle","marker","render","height","figure"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\nimport './style.css'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {\n          type: 'bar',\n          x: [],\n          y: [],\n          width: [1, 1, 1]\n        }],\n      layout: {\n        paper_bgcolor: 'rgb(97, 92, 87)',\n        plot_bgcolor: 'rgb(97, 92, 87)',\n        font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n        xaxis: { showticklabels: false },\n        yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\", dtick: .5 }\n      },\n      config: { responsive: true },\n      titles: [],\n      years: [],\n      age_ratings: [],\n      imdb_ratings: [],\n      on_netflixs: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://ea-mysite-backend.herokuapp.com/api/')\n      .then(res => {\n        const nflix = res.data;\n        const title = [];\n        const year = [];\n        const age_rating = [];\n        const imdb_rating = [];\n        const on_netflix = [];\n        nflix.map((movie) => (\n          title.push(movie.title),\n          year.push(movie.year),\n          age_rating.push(movie.age_rating),\n          imdb_rating.push(movie.imdb_rating),\n          on_netflix.push(movie.on_netflix)\n        ));\n        this.setState({\n          data: [{\n            x: title.slice(0, 50),\n            y: imdb_rating.slice(0, 50),\n            text: title.slice(0, 50),\n            textposition: 'auto',\n            textangle: 90,\n            type: 'bar',\n            marker: { color: \"rgb(255, 208, 0)\" }\n          }],\n          layout: {\n            paper_bgcolor: 'rgb(97, 92, 87)',\n            plot_bgcolor: 'rgb(97, 92, 87)',\n            font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n            xaxis: { showticklabels: false },\n            yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\" }\n          },\n          config: { responsive: true },\n          titles: title,\n          years: year,\n          age_ratings: age_rating,\n          imdb_ratings: imdb_rating,\n          on_netflixs: on_netflix\n        });\n      })\n  }\n  render() {\n    return (\n      <section>\n        <p className='pltttle'>Neftlix IMDB Ratings</p>\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n          <Plot\n            data={this.state.data}\n            layout={this.state.layout}\n            onInitialized={(figure) => this.setState(figure)}\n            onUpdate={(figure) => this.setState(figure)}\n          />\n        </div>\n      </section>\n    );\n  }\n}\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}