{"ast":null,"code":"var _jsxFileName = \"/Users/Master/mysite/src/Components/Graph/index.js\";\nimport React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        x: [],\n        y: [],\n        type: 'bar'\n      }],\n      layout: {\n        height: 500,\n        width: 900,\n        title: \"Area chart\",\n        paper_bgcolor: 'linear-gradient(58deg,rgb(152, 205, 255) 0%,rgb(239, 199, 255) 80%)',\n        plot_bgcolor: 'linear-gradient(58deg,rgb(152, 205, 255) 0%,rgb(239, 199, 255) 80%)',\n        font: {\n          family: \"Arial\",\n          size: 18,\n          color: \"white\"\n        },\n        xaxis: {\n          range: [0, 10],\n          zerolinecolor: \"white\",\n          gridcolor: \"white\"\n        },\n        yaxis: {\n          range: [0, 10],\n          zerolinecolor: \"white\",\n          gridcolor: \"white\"\n        }\n      },\n      title: [],\n      year: [],\n      age_rating: [],\n      imdb_rating: [],\n      on_netflix: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/').then(res => {\n      const nflix = res.data;\n      const title = [];\n      const year = [];\n      const age_rating = [];\n      const imdb_rating = [];\n      const on_netflix = [];\n      nflix.map(movie => (title.push(movie.title), year.push(movie.year), age_rating.push(movie.age_rating), imdb_rating.push(movie.imdb_rating), on_netflix.push(movie.on_netflix)));\n      this.setState({\n        Data: [{\n          x: title,\n          y: imdb_rating\n        }],\n        title: title,\n        year: year,\n        age_rating: age_rating,\n        imdb_rating: imdb_rating,\n        on_netflix: on_netflix\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Plot, {\n        data: this.state.data,\n        layout: this.state.layout,\n        onInitialized: figure => this.setState(figure),\n        onUpdate: figure => this.setState(figure)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/Users/Master/mysite/src/Components/Graph/index.js"],"names":["React","Plot","axios","Graph","Component","constructor","props","state","data","x","y","type","layout","height","width","title","paper_bgcolor","plot_bgcolor","font","family","size","color","xaxis","range","zerolinecolor","gridcolor","yaxis","year","age_rating","imdb_rating","on_netflix","componentDidMount","get","then","res","nflix","map","movie","push","setState","Data","render","figure"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\n\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n            data: [\n                {\n                x: [],\n                y: [],\n                type: 'bar',\n                }],\n            layout: {\n                height: 500,\n                width: 900,\n                title: \"Area chart\",\n                paper_bgcolor: 'linear-gradient(58deg,rgb(152, 205, 255) 0%,rgb(239, 199, 255) 80%)',\n                plot_bgcolor: 'linear-gradient(58deg,rgb(152, 205, 255) 0%,rgb(239, 199, 255) 80%)',\n                font: {family: \"Arial\",size: 18, color:\"white\"},\n                xaxis: {range: [0, 10], zerolinecolor: \"white\", gridcolor: \"white\"},\n                yaxis: {range: [0, 10], zerolinecolor: \"white\", gridcolor: \"white\"}\n            },\n            title: [],\n            year: [],\n            age_rating: [],\n            imdb_rating: [],\n            on_netflix: []\n    };\n  }\n\n  componentDidMount() {\n      axios.get('http://localhost:8000/api/')\n      .then(res => {\n          const nflix = res.data;\n          const title = [];\n          const year = [];\n          const age_rating = [];\n          const imdb_rating = [];\n          const on_netflix = [];\n          nflix.map((movie) => (\n              title.push(movie.title),\n              year.push(movie.year),\n              age_rating.push(movie.age_rating),\n              imdb_rating.push(movie.imdb_rating),\n              on_netflix.push(movie.on_netflix)\n          ));\n        this.setState({Data: [{x: title , y: imdb_rating}], title: title, year: year, age_rating: age_rating, imdb_rating: imdb_rating, on_netflix: on_netflix});\n      })\n  }\n  render() {\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <Plot\n          data={this.state.data}\n          layout={this.state.layout}\n          onInitialized={(figure) => this.setState(figure)}\n          onUpdate={(figure) => this.setState(figure)}\n        />\n      </div>\n    );\n  }\n}\nexport default Graph;"]},"metadata":{},"sourceType":"module"}