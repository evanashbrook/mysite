[{"/Users/Master/mysite/src/index.js":"1","/Users/Master/mysite/src/reportWebVitals.js":"2","/Users/Master/mysite/src/App.js":"3","/Users/Master/mysite/src/Header/index.js":"4","/Users/Master/mysite/src/Containers/Home/index.js":"5","/Users/Master/mysite/src/Containers/Projects/index.js":"6","/Users/Master/mysite/src/Containers/Interests/index.js":"7","/Users/Master/mysite/src/Containers/Education/index.js":"8","/Users/Master/mysite/src/Containers/Contact/index.js":"9","/Users/Master/mysite/src/Components/Plot/index.js":"10","/Users/Master/mysite/src/Components/Mainpage/index.js":"11","/Users/Master/mysite/src/Components/TitleCard/index.js":"12","/Users/Master/mysite/src/Components/Sidebar/index.js":"13","/Users/Master/mysite/src/Components/Card2/index.js":"14","/Users/Master/mysite/src/Components/Card/index.js":"15","/Users/Master/mysite/src/Components/SoftCard/index.js":"16","/Users/Master/mysite/src/Components/Graph/index.js":"17","/Users/Master/mysite/src/Components/Graph2/index.js":"18","/Users/Master/mysite/src/Components/mGraph2/index.js":"19","/Users/Master/mysite/src/Components/mGraph/index.js":"20","/Users/Master/mysite/src/Components/Mgraph2/index.js":"21","/Users/Master/mysite/src/Components/Mgraph/index.js":"22"},{"size":500,"mtime":1621490024036,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1621490024038,"results":"25","hashOfConfig":"24"},{"size":828,"mtime":1623295718637,"results":"26","hashOfConfig":"24"},{"size":1413,"mtime":1624565438796,"results":"27","hashOfConfig":"24"},{"size":897,"mtime":1624423806817,"results":"28","hashOfConfig":"24"},{"size":1588,"mtime":1624337460626,"results":"29","hashOfConfig":"24"},{"size":1202,"mtime":1624427392761,"results":"30","hashOfConfig":"24"},{"size":11080,"mtime":1624567448801,"results":"31","hashOfConfig":"24"},{"size":2642,"mtime":1624312090227,"results":"32","hashOfConfig":"24"},{"size":211,"mtime":1624310432702,"results":"33","hashOfConfig":"24"},{"size":211,"mtime":1622850947534,"results":"34","hashOfConfig":"24"},{"size":218,"mtime":1623216476059,"results":"35","hashOfConfig":"24"},{"size":208,"mtime":1622850951718,"results":"36","hashOfConfig":"24"},{"size":202,"mtime":1623296901015,"results":"37","hashOfConfig":"24"},{"size":198,"mtime":1623215083086,"results":"38","hashOfConfig":"24"},{"size":212,"mtime":1623271213338,"results":"39","hashOfConfig":"24"},{"size":7389,"mtime":1624415536225,"results":"40","hashOfConfig":"24"},{"size":14051,"mtime":1624424900079,"results":"41","hashOfConfig":"24"},{"size":4748,"mtime":1624337267613,"results":"42","hashOfConfig":"24"},{"size":2872,"mtime":1624337332583,"results":"43","hashOfConfig":"24"},{"size":8198,"mtime":1624566684894,"results":"44","hashOfConfig":"24"},{"size":5669,"mtime":1624566406519,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"9pc82z",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},"/Users/Master/mysite/src/index.js",[],["101","102"],"/Users/Master/mysite/src/reportWebVitals.js",[],"/Users/Master/mysite/src/App.js",[],"/Users/Master/mysite/src/Header/index.js",["103","104"],"import React from 'react'\nimport './style.css'\nimport { NavLink } from 'react-router-dom'\nimport { useMediaQuery } from 'react-responsive'\n\n/**\n* @author\n* @function Header\n**/\n\nconst Header = (props) => {\n  const isDesktopOrLaptop = useMediaQuery({ query: '(min-width: 1224px)' })\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n  const isLandscape = useMediaQuery({ query: '(orientation: landscape)' })\n  return (\n    <header className=\"header\">\n      {isDesktopOrLaptop &&\n        <nav className=\"headerMenu\">\n          <li><NavLink to='/'>Evan Ashbrook</NavLink></li>\n          <li><NavLink to='/education'>Education</NavLink></li>\n          <li><NavLink to='projects'>Django DB Project</NavLink></li>\n          <li><NavLink to='/interests'>Responsive Practices</NavLink></li>\n          <li><NavLink to='/Contact'>Contact</NavLink></li>\n        </nav>}\n\n      {isTabletOrMobile &&\n        <nav className=\"m-headerMenu\">\n          <li><NavLink to='/'>Evan Ashbrook</NavLink></li>\n          <li><NavLink to='/education'>Education</NavLink></li>\n          <li><NavLink to='projects'>Django DB Project</NavLink></li>\n          <li><NavLink to='/interests'>Responsive Practices</NavLink></li>\n          <li><NavLink to='/Contact'>Contact</NavLink></li>\n        </nav>}\n\n\n    </header>\n  )\n\n}\n\nexport default Header","/Users/Master/mysite/src/Containers/Home/index.js",["105","106"],"import React from 'react'\nimport './style.css'\nimport { useMediaQuery } from 'react-responsive'\n\n/**\n* @author\n* @function Home\n**/\n\nconst Home = (props) => {\n  const isDesktopOrLaptop = useMediaQuery({ query: '(min-width: 1224px)' })\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n  const isLandscape = useMediaQuery({ query: '(orientation: landscape)' })\n  return (\n    <section className=\"Hhme\">\n      {isDesktopOrLaptop &&\n        <div className=\"Hmain\">\n          <p className='fronttxt'>Evan Ashbrook</p>\n          <p className='fronttxt2'>Web Dev</p>\n        </div>}\n      {isTabletOrMobile &&\n        <div className=\"m-Hmain\">\n          <p className='m-fronttxt'>Evan Ashbrook</p>\n          <p className='m-fronttxt2'>Web Dev</p>\n        </div>}\n    </section>\n  )\n\n}\n\nexport default Home","/Users/Master/mysite/src/Containers/Projects/index.js",["107","108"],"import React from 'react'\nimport Graph from '../../Components/Graph'\nimport Mgraph from '../../Components/Mgraph'\nimport Mgraph2 from '../../Components/Mgraph2'\nimport Graph2 from '../../Components/Graph2'\nimport PlotCard from '../../Components/Plot'\nimport './style.css'\nimport { useMediaQuery } from 'react-responsive'\n\n/**\n* @author\n* @function Projects\n**/\n\nconst Projects = (props) => {\n  const isDesktopOrLaptop = useMediaQuery({ query: '(min-width: 1224px)' })\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n  const isLandscape = useMediaQuery({ query: '(orientation: landscape)' })\n  return (\n    <section className=\"proj\">\n      {isDesktopOrLaptop &&\n        <div className=\"project\">\n          <PlotCard>\n            <div className='plt'>\n              <Graph />\n            </div>\n          </PlotCard>\n        </div>}\n      {isDesktopOrLaptop &&\n        <div className=\"project2\">\n          <PlotCard>\n            <div className='plt2'>\n              <Graph2 />\n            </div>\n          </PlotCard>\n        </div>}\n\n      {isTabletOrMobile &&\n        <div className=\"m-project2\">\n          <PlotCard>\n            <div className='m-plt2'>\n              <Mgraph />\n            </div>\n          </PlotCard>\n        </div>}\n      {isTabletOrMobile &&\n        <div className=\"m-project2\">\n          <PlotCard>\n            <div className='m-plt2'>\n              <Mgraph2 />\n            </div>\n          </PlotCard>\n        </div>}\n    </section>\n  )\n\n}\n\nexport default Projects","/Users/Master/mysite/src/Containers/Interests/index.js",[],"/Users/Master/mysite/src/Containers/Education/index.js",["109","110"],"import React from 'react'\nimport './style.css'\nimport Sidebar from '../../Components/Sidebar'\nimport sas from '../../Assets/Icons/SAS_Hall.jpg'\nimport Card from '../../Components/Card'\nimport TitleCard from '../../Components/TitleCard'\nimport Card2 from '../../Components/Card2'\nimport SoftCard from '../../Components/SoftCard'\nimport { useMediaQuery } from 'react-responsive'\n\n/**\n* @author\n* @function Education\n**/\n\nconst Education = (props) => {\n    const isDesktopOrLaptop = useMediaQuery({ query: '(min-width: 1224px)' })\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n    const isLandscape = useMediaQuery({ query: '(orientation: landscape)' })\n    return (\n        <section className=\"Ehme\">\n            {isDesktopOrLaptop &&\n                <div className='state'>\n                    <TitleCard>\n                        <p className='ncstate'>Nc State University</p>\n                    </TitleCard>\n                </div>}\n            {isDesktopOrLaptop && <div className='sas'>\n                <Card>\n                    <img src={sas} alt='sas' />\n                </Card>\n            </div>}\n            {isDesktopOrLaptop && <div className=\"Eside\">\n                <Sidebar>\n                    <p className='p1'>Bachelor of the Sciences in Mathematics</p>\n                    <p className='p2'>with a minor concentration in Philosophy</p>\n                    <ul className='schlist'>\n                        <li>Mathematics for Scientific Computing</li>\n                        <li>Probability Theory and Stochastic Processes</li>\n                        <li>Statistical Methods and Distributions</li>\n                        <li>Complex Analysis</li>\n                        <li>Psychology</li>\n                        <li>Sociology</li>\n                        <li>Philosophy and History</li>\n                    </ul>\n                </Sidebar>\n            </div>}\n            {isDesktopOrLaptop && <div className=\"Eside2\">\n                <Card2>\n                    <p className='p21'>My Intro To Web Dev</p>\n                    <p className='p22'>Learning Mathematics and Philosophy produced some of the most enlightening moments in my life, and they prepared me to understand how to generalize, problem solve, and shift perspective.  I very much value the years I spent learning these skills.  However, their pure theoretical nature kept me from applying my knowledge to my actions.  They also did not provide too many professions to apply my knowledge to.  Given my background with python, and a realization that the computer is the most revolutionary invention that humanity has produced, I decided to dive head first into learning computer technology at large.  I'll admit, it will be a long journey, but I've started here at web development and I'm pretty proud of what I've been able to accomplish.</p>\n                    <dl className='knowlist'>\n                        <p className='frontend'>Frontend</p>\n                        <dt>JSX</dt>\n                        <dd>Setting, updating, mapping and looping over states, mounting components to make POST, GET, PUT and DELETE requests, manipulating js arrays and objects.</dd>\n                        <dt>CSS</dt>\n                        <dd>Styling, formatting, animating, coloring, sticky headers and sidebars</dd>\n                    </dl>\n                    <dl className='knowlist2'>\n                        <p className='backend'>Backend</p>\n                        <dt>Python</dt>\n                        <dd>Building the backend architecture required to run an application on the Django REST web framework.</dd>\n                        <dd>Using Django Rest can be a bit tricky when trying to populate your database from the get-go.  I've developed an efficient method for configuring csv/json files into the correct format to load them into the database as what django calls \"fixtures\".</dd>\n                        <dt>SQL</dt>\n                        <dd>Creating/manipulating PostgreSQL Databases, adding/removing/setting privileges for users</dd>\n                    </dl>\n                </Card2>\n            </div>}\n            {isDesktopOrLaptop && <div className='btm'>\n                <Card2>\n                    <div className='btmpage'>\n                        <p className='fend'>Front end</p>\n                        <p className='bend'>Back end</p>\n                    </div>\n                    <div className='btmlists'>\n                        <ul className='l1'>\n                            <li className='react'><SoftCard>React</SoftCard></li>\n                            <li className='node'><SoftCard>Node.js</SoftCard></li>\n                            <li className='react-pltly'><SoftCard>React-Plotly</SoftCard></li>\n                            <li className='axios'><SoftCard>Axios</SoftCard></li>\n                        </ul>\n                        <ul className='l2'>\n                            <li className='django'><SoftCard>Django</SoftCard></li>\n                            <li className='djangorf'><SoftCard>Django REST Framework</SoftCard></li>\n                            <li className='dj-c-h'><SoftCard>Django-Cors-Headers</SoftCard></li>\n                            <li className='gunicorn'><SoftCard>Gunicorn</SoftCard></li>\n                        </ul>\n                    </div>\n                    <div className='datab'>\n                        <p className='db'>Database:</p>\n                        <p className='dbpost'><SoftCard>PostgreSQL</SoftCard></p>\n                    </div>\n                    <div className='heroku'>\n                        <p className='dep'>Deployment:</p>\n                        <p className='hboi'><SoftCard>Heroku</SoftCard></p>\n                    </div>\n                </Card2>\n            </div>}\n\n            {isTabletOrMobile &&\n                <div className='m-state'>\n                    <TitleCard>\n                        <p className='m-ncstate'>Nc State University</p>\n                    </TitleCard>\n                </div>}\n            {isTabletOrMobile && <div className='m-sas'>\n                <Card>\n                    <img src={sas} alt='m-sas' />\n                </Card>\n            </div>}\n            {isTabletOrMobile && <div className=\"m-Eside\">\n                <Sidebar>\n                    <p className='m-p1'>Bachelor of the Sciences in Mathematics</p>\n                    <p className='m-p2'>with a minor concentration in Philosophy</p>\n                    <ul className='m-schlist'>\n                        <li>Mathematics for Scientific Computing</li>\n                        <li>Probability Theory and Stochastic Processes</li>\n                        <li>Statistical Methods and Distributions</li>\n                        <li>Complex Analysis</li>\n                        <li>Psychology</li>\n                        <li>Sociology</li>\n                        <li>Philosophy and History</li>\n                    </ul>\n                </Sidebar>\n            </div>}\n            {isTabletOrMobile && <div className=\"m-Eside2\">\n                <Card2>\n                    <p className='m-p21'>My Intro To Web Dev</p>\n                    <p className='m-p22'>Learning Mathematics and Philosophy produced some of the most enlightening moments in my life, and they prepared me to understand how to generalize, problem solve, and shift perspective.  I very much value the years I spent learning these skills.  However, their pure theoretical nature kept me from applying my knowledge to my actions.  They also did not provide too many professions to apply my knowledge to.  Given my background with python, and a realization that the computer is the most revolutionary invention that humanity has produced, I decided to dive head first into learning computer technology at large.  I'll admit, it will be a long journey, but I've started here at web development and I'm pretty proud of what I've been able to accomplish.</p>\n                    <dl className='m-knowlist'>\n                        <p className='m-frontend'>Frontend</p>\n                        <dt>JSX</dt>\n                        <dd>Setting, updating, mapping and looping over states, mounting components to make POST, GET, PUT and DELETE requests, manipulating js arrays and objects.</dd>\n                        <dt>CSS</dt>\n                        <dd>Styling, formatting, animating, coloring, sticky headers and sidebars</dd>\n                    </dl>\n                    <dl className='m-knowlist2'>\n                        <p className='m-backend'>Backend</p>\n                        <dt>Python</dt>\n                        <dd>Building the backend architecture required to run an application on the Django REST web framework.</dd>\n                        <dd>Using Django Rest can be a bit tricky when trying to populate your database from the get-go.  I've developed an efficient method for configuring csv/json files into the correct format to load them into the database as what django calls \"fixtures\".</dd>\n                        <dt>SQL</dt>\n                        <dd>Creating/manipulating PostgreSQL Databases, adding/removing/setting privileges for users</dd>\n                    </dl>\n                </Card2>\n            </div>}\n            {isTabletOrMobile && <div className='m-btm'>\n                <Card2>\n                    <div className='m-btmpage'>\n                        <p className='m-fend'>Front end</p>\n                        <p className='m-bend'>Back end</p>\n                    </div>\n                    <div className='m-btmlists'>\n                        <ul className='m-l1'>\n                            <li className='m-react'><SoftCard>React</SoftCard></li>\n                            <li className='m-node'><SoftCard>Node.js</SoftCard></li>\n                            <li className='m-react-pltly'><SoftCard>React-Plotly</SoftCard></li>\n                            <li className='m-axios'><SoftCard>Axios</SoftCard></li>\n                        </ul>\n                        <ul className='m-l2'>\n                            <li className='m-django'><SoftCard>Django</SoftCard></li>\n                            <li className='m-djangorf'><SoftCard>Django REST Framework</SoftCard></li>\n                            <li className='m-dj-c-h'><SoftCard>Django-Cors-Headers</SoftCard></li>\n                            <li className='m-gunicorn'><SoftCard>Gunicorn</SoftCard></li>\n                        </ul>\n                    </div>\n                    <div className='m-datab'>\n                        <p className='m-db'>Database:</p>\n                        <p className='m-dbpost'><SoftCard>PostgreSQL</SoftCard></p>\n                    </div>\n                    <div className='m-heroku'>\n                        <p className='m-dep'>Deployment:</p>\n                        <p className='m-hboi'><SoftCard>Heroku</SoftCard></p>\n                    </div>\n                </Card2>\n            </div>}\n        </section>\n    )\n\n}\n\nexport default Education","/Users/Master/mysite/src/Containers/Contact/index.js",["111","112"],"import React from 'react'\nimport Card from '../../Components/Card'\nimport Sidebar from '../../Components/Sidebar'\nimport TitleCard from '../../Components/TitleCard'\nimport './style.css'\nimport picture from '../../Assets/Icons/evpic1.jpg'\nimport { useMediaQuery } from 'react-responsive'\n\n/**\n* @author\n* @function Contact\n**/\n\nconst Contact = (props) => {\n    const isDesktopOrLaptop = useMediaQuery({ query: '(min-width: 1224px)' })\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n    const isLandscape = useMediaQuery({ query: '(orientation: landscape)' })\n    return (\n        <section className=\"Chme\">\n            {isDesktopOrLaptop &&\n                <div className='cname'>\n                    <TitleCard>\n                        <p className='evan'>Evan Ashbrook</p>\n                    </TitleCard>\n                </div>}\n            {isDesktopOrLaptop &&\n                <div className='mypic'>\n                    <Card>\n                        <img src={picture} alt='profilepic' />\n                    </Card>\n                </div>}\n            {isDesktopOrLaptop &&\n                <div className='Cside'>\n                    <Sidebar>\n                        <p className='cp1'>Get In Touch</p>\n                        <ul className='clist'>\n                            <li>Email: eashbrook@protonmail.com</li>\n                            <li>LinkedIn: <a href='https://www.linkedin.com/in/evan-ashbrook-b6b556169/'>Evan Ashbrook</a></li>\n                        </ul>\n                    </Sidebar>\n                </div>}\n\n            {isTabletOrMobile &&\n                <div className='m-cname'>\n                    <TitleCard>\n                        <p className='m-evan'>Evan Ashbrook</p>\n                    </TitleCard>\n                </div>}\n            {isTabletOrMobile &&\n                <div className='m-mypic'>\n                    <Card>\n                        <img src={picture} alt='m-profilepic' />\n                    </Card>\n                </div>}\n            {isTabletOrMobile &&\n                <div className='m-Cside'>\n                    <Sidebar>\n                        <p className='m-cp1'>Get In Touch</p>\n                        <ul className='m-clist'>\n                            <li>Email: eashbrook@protonmail.com</li>\n                            <li>LinkedIn: <a href='https://www.linkedin.com/in/evan-ashbrook-b6b556169/'>Evan Ashbrook</a></li>\n                        </ul>\n                    </Sidebar>\n                </div>}\n        </section>\n    )\n\n}\n\nexport default Contact","/Users/Master/mysite/src/Components/Plot/index.js",[],"/Users/Master/mysite/src/Components/Mainpage/index.js",[],["113","114"],"/Users/Master/mysite/src/Components/TitleCard/index.js",[],"/Users/Master/mysite/src/Components/Sidebar/index.js",[],"/Users/Master/mysite/src/Components/Card2/index.js",[],"/Users/Master/mysite/src/Components/Card/index.js",[],"/Users/Master/mysite/src/Components/SoftCard/index.js",[],"/Users/Master/mysite/src/Components/Graph/index.js",["115"],"import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\nimport './style.css'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {\n          type: 'bar',\n          x: [],\n          y: [],\n          width: [1, 1, 1]\n        }],\n      layout: {\n        width: 1000,\n        height: 500,\n        margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n        paper_bgcolor: 'rgb(97, 92, 87)',\n        plot_bgcolor: 'rgb(97, 92, 87)',\n        font: { family: \"Arial\", size: \"15px\", color: \"rgb(253, 237, 165)\" },\n        xaxis: { showticklabels: false },\n        yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\", dtick: .5 }\n      },\n      config: { responsive: true },\n      titles: [],\n      years: [],\n      age_ratings: [],\n      imdb_ratings: [],\n      on_netflixs: []\n    };\n    this.handleClick1 = this.handleClick1.bind(this);\n    this.handleClick2 = this.handleClick2.bind(this);\n    this.handleClick3 = this.handleClick3.bind(this);\n    this.handleClick4 = this.handleClick4.bind(this);\n    this.handleClick5 = this.handleClick5.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('https://ea-mysite-backend.herokuapp.com/api/')\n      .then(res => {\n        const nflix = res.data;\n        const title = [];\n        const year = [];\n        const age_rating = [];\n        const imdb_rating = [];\n        const on_netflix = [];\n        nflix.map((movie) => (\n          title.push(movie.title),\n          year.push(movie.year),\n          age_rating.push(movie.age_rating),\n          imdb_rating.push(movie.imdb_rating),\n          on_netflix.push(movie.on_netflix)\n        ));\n        this.setState({\n          data: [{\n            x: title.slice(0, 10),\n            y: imdb_rating.slice(0, 10),\n            text: title.slice(0, 10),\n            textposition: 'auto',\n            textangle: 90,\n            type: 'bar',\n            marker: { color: \"#5f9ea0\" }\n          }],\n          layout: {\n            width: 1000,\n            height: 500,\n            margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n            paper_bgcolor: 'rgb(97, 92, 87)',\n            plot_bgcolor: 'rgb(97, 92, 87)',\n            font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n            xaxis: { showticklabels: false },\n            yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\" }\n          },\n          style: { width: \"100%\", height: \"100%\" },\n          config: { responsive: true },\n          titles: title,\n          years: year,\n          age_ratings: age_rating,\n          imdb_ratings: imdb_rating,\n          on_netflixs: on_netflix\n        });\n      })\n  }\n  handleClick1() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 5),\n        y: this.state.imdb_ratings.slice(0, 5),\n        text: this.state.titles.slice(0, 5),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n      layout: {\n        width: 1000,\n        height: 500,\n        margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n        paper_bgcolor: 'rgb(97, 92, 87)',\n        plot_bgcolor: 'rgb(97, 92, 87)',\n        font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n        xaxis: { showticklabels: false },\n        yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\" }\n      },\n    })\n  };\n  handleClick2() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 10),\n        y: this.state.imdb_ratings.slice(0, 10),\n        text: this.state.titles.slice(0, 10),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n      layout: {\n        width: 1000,\n        height: 500,\n        margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n        paper_bgcolor: 'rgb(97, 92, 87)',\n        plot_bgcolor: 'rgb(97, 92, 87)',\n        font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n        xaxis: { showticklabels: false },\n        yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\" }\n      },\n    })\n  };\n  handleClick3() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 15),\n        y: this.state.imdb_ratings.slice(0, 15),\n        text: this.state.titles.slice(0, 15),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n      layout: {\n        width: 1000,\n        height: 500,\n        margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n        paper_bgcolor: 'rgb(97, 92, 87)',\n        plot_bgcolor: 'rgb(97, 92, 87)',\n        font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n        xaxis: { showticklabels: false },\n        yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\" }\n      },\n    })\n  };\n  handleClick4() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 20),\n        y: this.state.imdb_ratings.slice(0, 20),\n        text: this.state.titles.slice(0, 20),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n      layout: {\n        width: 1000,\n        height: 500,\n        margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n        paper_bgcolor: 'rgb(97, 92, 87)',\n        plot_bgcolor: 'rgb(97, 92, 87)',\n        font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n        xaxis: { showticklabels: false },\n        yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\" }\n      },\n    })\n  };\n  handleClick5() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 50),\n        y: this.state.imdb_ratings.slice(0, 50),\n        text: this.state.titles.slice(0, 50),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n      layout: {\n        width: 1000,\n        height: 500,\n        margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n        paper_bgcolor: 'rgb(97, 92, 87)',\n        plot_bgcolor: 'rgb(97, 92, 87)',\n        font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n        xaxis: { showticklabels: false },\n        yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\" }\n      },\n    })\n  };\n\n  render() {\n    return (\n      <section>\n        <p className='pltttle'>Neftlix IMDB Ratings</p>\n        <div className='plottyboi'>\n          <Plot\n            data={this.state.data}\n            layout={this.state.layout}\n            config={this.state.config}\n            onInitialized={(figure) => this.setState(figure)}\n            onUpdate={(figure) => this.setState(figure)}\n          />\n        </div>\n        <div className='btns'>\n          <p className='btntitle'>How many movies would you like to compare?</p>\n          <ul>\n            <button className='btn1' onClick={this.handleClick1}>5</button>\n            <button className='btn2' onClick={this.handleClick2}>10</button>\n            <button className='btn3' onClick={this.handleClick3}>15</button>\n            <button className='btn4' onClick={this.handleClick4}>20</button>\n            <button className='btn5' onClick={this.handleClick5}>50</button>\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\nexport default Graph;\n","/Users/Master/mysite/src/Components/Graph2/index.js",["116"],"import React from 'react'\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\nimport './style.css'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nclass Graph2 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                {\n                    type: 'scatter3d',\n                    x: [],\n                    y: [],\n                    z: [],\n                }],\n            layout: {\n                width: 1000,\n                height: 650,\n                margin: { l: 20, r: 20, t: 10, b: 10, pad: 10 },\n                paper_bgcolor: 'rgb(97, 92, 87)',\n                plot_bgcolor: 'rgb(97, 92, 87)',\n                font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n                scene: {\n                    xaxis: { range: [1990, 2021], zerolinecolor: \"rgb(253, 237, 165)\", title: 'Release Year' },\n                    yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\", title: 'Title' },\n                    zaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\", title: 'IMDB Rating' },\n                },\n            },\n            config: { responsive: true },\n            titles: [],\n            years: [],\n            age_ratings: [],\n            imdb_ratings: [],\n            on_netflixs: []\n        };\n        this.handleClick1 = this.handleClick1.bind(this);\n        this.handleClick2 = this.handleClick2.bind(this);\n        this.handleClick3 = this.handleClick3.bind(this);\n        this.handleClick4 = this.handleClick4.bind(this);\n        this.handleClick5 = this.handleClick5.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('https://ea-mysite-backend.herokuapp.com/api/')\n            .then(res => {\n                const nflix = res.data;\n                const title = [];\n                const year = [];\n                const age_rating = [];\n                const imdb_rating = [];\n                const on_netflix = [];\n                nflix.map((movie) => (\n                    title.push(movie.title),\n                    year.push(movie.year),\n                    age_rating.push(movie.age_rating),\n                    imdb_rating.push(movie.imdb_rating),\n                    on_netflix.push(movie.on_netflix)\n                ));\n                this.setState({\n                    data: [{\n                        x: year.slice(0, 10),\n                        y: title.slice(0, 10),\n                        z: imdb_rating.slice(0, 10),\n                        type: 'scatter3d',\n                        mode: 'markers',\n                        marker: {\n                            color: \"#5f9ea0\"\n                        }\n                    }],\n                    layout: {\n                        width: 1000,\n                        height: 650,\n                        margin: { l: 20, r: 20, t: 10, b: 10, pad: 10 },\n                        paper_bgcolor: 'rgb(97, 92, 87)',\n                        plot_bgcolor: 'rgb(97, 92, 87)',\n                        font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n                        scene: {\n                            xaxis: { range: [1990, 2021], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Release Year\" },\n                            yaxis: { showticklabels: false, zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Title\" },\n                            zaxis: { range: [5, 10], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"IMDB Rating\" },\n                            aspectmode: 'manual',\n                            aspectratio: { x: 2, y: 1, z: 1 },\n                            camera: {\n                                center: {\n                                    x: 0, y: -.5, z: -.5\n                                },\n                                eye: {\n                                    x: -.5, y: 2, z: 1.2\n                                },\n                                up: {\n                                    x: 0, y: 0, z: 1\n                                }\n                            },\n                        }\n                    },\n                    config: { responsive: true },\n                    titles: title,\n                    years: year,\n                    age_ratings: age_rating,\n                    imdb_ratings: imdb_rating,\n                    on_netflixs: on_netflix\n                }\n                );\n            })\n    }\n    handleClick1() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 5),\n                y: this.state.titles.slice(0, 5),\n                z: this.state.imdb_ratings.slice(0, 5),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }],\n            layout: {\n                width: 1000,\n                height: 650,\n                margin: { l: 20, r: 20, t: 10, b: 10, pad: 10 },\n                paper_bgcolor: 'rgb(97, 92, 87)',\n                plot_bgcolor: 'rgb(97, 92, 87)',\n                font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n                scene: {\n                    xaxis: { range: [1990, 2021], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Release Year\" },\n                    yaxis: { showticklabels: false, zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Title\" },\n                    zaxis: { range: [5, 10], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"IMDB Rating\" },\n                    aspectmode: 'manual',\n                    aspectratio: { x: 2, y: 1, z: 1 },\n                    camera: {\n                        center: {\n                            x: 0, y: -.5, z: -.5\n                        },\n                        eye: {\n                            x: -.5, y: 1, z: 1.2\n                        },\n                        up: {\n                            x: 0, y: 0, z: 1\n                        }\n                    },\n                }\n            },\n        })\n    };\n    handleClick2() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 10),\n                y: this.state.titles.slice(0, 10),\n                z: this.state.imdb_ratings.slice(0, 10),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }],\n            layout: {\n                width: 1000,\n                height: 650,\n                margin: { l: 20, r: 20, t: 10, b: 10, pad: 10 },\n                paper_bgcolor: 'rgb(97, 92, 87)',\n                plot_bgcolor: 'rgb(97, 92, 87)',\n                font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n                scene: {\n                    xaxis: { range: [1990, 2021], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Release Year\" },\n                    yaxis: { showticklabels: false, zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Title\" },\n                    zaxis: { range: [5, 10], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"IMDB Rating\" },\n                    aspectmode: 'manual',\n                    aspectratio: { x: 2, y: 1, z: 1 },\n                    camera: {\n                        center: {\n                            x: 0, y: -.5, z: -.5\n                        },\n                        eye: {\n                            x: -.5, y: 1, z: 1.2\n                        },\n                        up: {\n                            x: 0, y: 0, z: 1\n                        }\n                    },\n                }\n            },\n        })\n    };\n    handleClick3() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 15),\n                y: this.state.titles.slice(0, 15),\n                z: this.state.imdb_ratings.slice(0, 15),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }],\n            layout: {\n                width: 1000,\n                height: 650,\n                margin: { l: 20, r: 20, t: 10, b: 10, pad: 10 },\n                paper_bgcolor: 'rgb(97, 92, 87)',\n                plot_bgcolor: 'rgb(97, 92, 87)',\n                font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n                scene: {\n                    xaxis: { range: [1990, 2021], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Release Year\" },\n                    yaxis: { showticklabels: false, zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Title\" },\n                    zaxis: { range: [5, 10], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"IMDB Rating\" },\n                    aspectmode: 'manual',\n                    aspectratio: { x: 2, y: 1, z: 1 },\n                    camera: {\n                        center: {\n                            x: 0, y: -.5, z: -.5\n                        },\n                        eye: {\n                            x: -.5, y: 1, z: 1.2\n                        },\n                        up: {\n                            x: 0, y: 0, z: 1\n                        }\n                    },\n                }\n            },\n        })\n    };\n    handleClick4() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 20),\n                y: this.state.titles.slice(0, 20),\n                z: this.state.imdb_ratings.slice(0, 20),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }],\n            layout: {\n                width: 1000,\n                height: 650,\n                margin: { l: 20, r: 20, t: 10, b: 10, pad: 10 },\n                paper_bgcolor: 'rgb(97, 92, 87)',\n                plot_bgcolor: 'rgb(97, 92, 87)',\n                font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n                scene: {\n                    xaxis: { range: [1990, 2021], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Release Year\" },\n                    yaxis: { showticklabels: false, zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Title\" },\n                    zaxis: { range: [5, 10], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"IMDB Rating\" },\n                    aspectmode: 'manual',\n                    aspectratio: { x: 2, y: 1, z: 1 },\n                    camera: {\n                        center: {\n                            x: 0, y: -.5, z: -.5\n                        },\n                        eye: {\n                            x: -.5, y: 1, z: 1.2\n                        },\n                        up: {\n                            x: 0, y: 0, z: 1\n                        }\n                    },\n                }\n            },\n        })\n    };\n    handleClick5() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 50),\n                y: this.state.titles.slice(0, 50),\n                z: this.state.imdb_ratings.slice(0, 50),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }],\n            layout: {\n                width: 1000,\n                height: 650,\n                margin: { l: 20, r: 20, t: 10, b: 10, pad: 10 },\n                paper_bgcolor: 'rgb(97, 92, 87)',\n                plot_bgcolor: 'rgb(97, 92, 87)',\n                font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n                scene: {\n                    xaxis: { range: [1990, 2021], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Release Year\" },\n                    yaxis: { showticklabels: false, zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Title\" },\n                    zaxis: { range: [5, 10], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"IMDB Rating\" },\n                    aspectmode: 'manual',\n                    aspectratio: { x: 2, y: 1, z: 1 },\n                    camera: {\n                        center: {\n                            x: 0, y: -.5, z: -.5\n                        },\n                        eye: {\n                            x: -.5, y: 1, z: 1.2\n                        },\n                        up: {\n                            x: 0, y: 0, z: 1\n                        }\n                    },\n                }\n            },\n        })\n    };\n\n    render() {\n        return (\n            <section>\n                <p className='pltttle2'>Neftlix IMDB Ratings</p>\n                <div className='plottyboi2'>\n                    <Plot\n                        data={this.state.data}\n                        layout={this.state.layout}\n                        config={this.state.config}\n                        onInitialized={(figure) => this.setState(figure)}\n                        onUpdate={(figure) => this.setState(figure)}\n                    />\n                </div>\n                <div className='btns2'>\n                    <p className='btntitle2'>How many movies would you like to compare?</p>\n                    <ul>\n                        <button className='btn1-2' onClick={this.handleClick1}>5</button>\n                        <button className='btn2-2' onClick={this.handleClick2}>10</button>\n                        <button className='btn3-2' onClick={this.handleClick3}>15</button>\n                        <button className='btn4-2' onClick={this.handleClick4}>20</button>\n                        <button className='btn5-2' onClick={this.handleClick5}>50</button>\n                    </ul>\n                </div>\n            </section>\n        );\n    }\n}\nexport default Graph2;\n\n","/Users/Master/mysite/src/Components/mGraph2/index.js",["117"],"/Users/Master/mysite/src/Components/mGraph/index.js",["118","119"],"/Users/Master/mysite/src/Components/Mgraph2/index.js",["120"],"import React from 'react'\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\nimport './style.css'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nclass Mgraph2 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                {\n                    type: 'scatter3d',\n                    x: [],\n                    y: [],\n                    z: [],\n                }],\n            layout: {\n                width: 350,\n                height: 300,\n                margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n                paper_bgcolor: 'rgb(97, 92, 87)',\n                plot_bgcolor: 'rgb(97, 92, 87)',\n                font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n                scene: {\n                    xaxis: { range: [1990, 2021], zerolinecolor: \"rgb(253, 237, 165)\", title: 'Release Year' },\n                    yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\", title: 'Title' },\n                    zaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\", title: 'IMDB Rating' },\n                    aspectmode: 'manual',\n                    aspectratio: { x: 2, y: 1, z: 1 },\n                    camera: {\n                        center: {\n                            x: 0, y: -.5, z: -.5\n                        },\n                        eye: {\n                            x: -.5, y: 2, z: 1.2\n                        },\n                        up: {\n                            x: 0, y: 0, z: 1\n                        }\n                    },\n                },\n            },\n            config: { responsive: true },\n            titles: [],\n            years: [],\n            age_ratings: [],\n            imdb_ratings: [],\n            on_netflixs: []\n        };\n        this.handleClick1 = this.handleClick1.bind(this);\n        this.handleClick2 = this.handleClick2.bind(this);\n        this.handleClick3 = this.handleClick3.bind(this);\n        this.handleClick4 = this.handleClick4.bind(this);\n        this.handleClick5 = this.handleClick5.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('https://ea-mysite-backend.herokuapp.com/api/')\n            .then(res => {\n                const nflix = res.data;\n                const title = [];\n                const year = [];\n                const age_rating = [];\n                const imdb_rating = [];\n                const on_netflix = [];\n                nflix.map((movie) => (\n                    title.push(movie.title),\n                    year.push(movie.year),\n                    age_rating.push(movie.age_rating),\n                    imdb_rating.push(movie.imdb_rating),\n                    on_netflix.push(movie.on_netflix)\n                ));\n                this.setState({\n                    data: [{\n                        x: year.slice(0, 10),\n                        y: title.slice(0, 10),\n                        z: imdb_rating.slice(0, 10),\n                        type: 'scatter3d',\n                        mode: 'markers',\n                        marker: {\n                            color: \"#5f9ea0\"\n                        }\n                    }],\n                    layout: {\n                        width: 350,\n                        height: 300,\n                        margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n                        paper_bgcolor: 'rgb(97, 92, 87)',\n                        plot_bgcolor: 'rgb(97, 92, 87)',\n                        font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n                        scene: {\n                            xaxis: { range: [1990, 2021], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Release Year\" },\n                            yaxis: { showticklabels: false, zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"Title\" },\n                            zaxis: { range: [5, 10], zerolinecolor: \"rgb(253, 237, 165)\", gridcolor: \"rgb(253, 237, 165)\", title: \"IMDB Rating\" },\n                            aspectmode: 'manual',\n                            aspectratio: { x: 2, y: 1, z: 1 },\n                            camera: {\n                                center: {\n                                    x: 0, y: -.5, z: -.5\n                                },\n                                eye: {\n                                    x: -.5, y: 2, z: 1.2\n                                },\n                                up: {\n                                    x: 0, y: 0, z: 1\n                                }\n                            },\n                        }\n                    },\n                    config: { responsive: true },\n                    titles: title,\n                    years: year,\n                    age_ratings: age_rating,\n                    imdb_ratings: imdb_rating,\n                    on_netflixs: on_netflix\n                }\n                );\n            })\n    }\n    handleClick1() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 5),\n                y: this.state.titles.slice(0, 5),\n                z: this.state.imdb_ratings.slice(0, 5),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }]\n        })\n    };\n    handleClick2() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 10),\n                y: this.state.titles.slice(0, 10),\n                z: this.state.imdb_ratings.slice(0, 10),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }]\n        })\n    };\n    handleClick3() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 15),\n                y: this.state.titles.slice(0, 15),\n                z: this.state.imdb_ratings.slice(0, 15),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }]\n        })\n    };\n    handleClick4() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 20),\n                y: this.state.titles.slice(0, 20),\n                z: this.state.imdb_ratings.slice(0, 20),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }]\n        })\n    };\n    handleClick5() {\n        this.setState({\n            data: [{\n                x: this.state.years.slice(0, 50),\n                y: this.state.titles.slice(0, 50),\n                z: this.state.imdb_ratings.slice(0, 50),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: { color: \"#5f9ea0\" }\n            }]\n        })\n    };\n    render() {\n        return (\n            <section>\n                <p className='m-pltttle2'>Tap and drag with your finger to view data from different angles</p>\n                <div className='m2-plottyboi'>\n                    <Plot\n                        data={this.state.data}\n                        layout={this.state.layout}\n                        config={this.state.config}\n                        onInitialized={(figure) => this.setState(figure)}\n                        onUpdate={(figure) => this.setState(figure)}\n                    />\n                </div>\n                <div className='m2-btns'>\n                    <p className='m2-btntitle'>How many movies would you like to compare?</p>\n                    <ul className='m2-btnlst'>\n                        <button className='m2-btn1' onClick={this.handleClick1}>5</button>\n                        <button className='m2-btn2' onClick={this.handleClick2}>10</button>\n                        <button className='m2-btn3' onClick={this.handleClick3}>15</button>\n                        <button className='m2-btn4' onClick={this.handleClick4}>20</button>\n                        <button className='m2-btn5' onClick={this.handleClick5}>50</button>\n                    </ul>\n                </div>\n            </section>\n        );\n    }\n}\nexport default Mgraph2;","/Users/Master/mysite/src/Components/Mgraph/index.js",["121","122"],"import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from 'axios';\nimport './style.css'\nimport Mgraph2 from \"../Mgraph2\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nclass Mgraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {\n          type: 'bar',\n          x: [],\n          y: [],\n          width: [1, 1, 1]\n        }],\n      layout: {\n        width: 350,\n        height: 300,\n        margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n        paper_bgcolor: 'rgb(97, 92, 87)',\n        plot_bgcolor: 'rgb(97, 92, 87)',\n        font: { family: \"Arial\", size: \"15px\", color: \"rgb(253, 237, 165)\" },\n        xaxis: { showticklabels: false },\n        yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\", dtick: .5 }\n      },\n      config: { responsive: true },\n      titles: [],\n      years: [],\n      age_ratings: [],\n      imdb_ratings: [],\n      on_netflixs: []\n    };\n    this.handleClick1 = this.handleClick1.bind(this);\n    this.handleClick2 = this.handleClick2.bind(this);\n    this.handleClick3 = this.handleClick3.bind(this);\n    this.handleClick4 = this.handleClick4.bind(this);\n    this.handleClick5 = this.handleClick5.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('https://ea-mysite-backend.herokuapp.com/api/')\n      .then(res => {\n        const nflix = res.data;\n        const title = [];\n        const year = [];\n        const age_rating = [];\n        const imdb_rating = [];\n        const on_netflix = [];\n        nflix.map((movie) => (\n          title.push(movie.title),\n          year.push(movie.year),\n          age_rating.push(movie.age_rating),\n          imdb_rating.push(movie.imdb_rating),\n          on_netflix.push(movie.on_netflix)\n        ));\n        this.setState({\n          data: [{\n            x: title.slice(0, 10),\n            y: imdb_rating.slice(0, 10),\n            text: title.slice(0, 10),\n            textposition: 'auto',\n            textangle: 90,\n            type: 'bar',\n            marker: { color: \"#5f9ea0\" }\n          }],\n          layout: {\n            width: 350,\n            height: 300,\n            margin: { l: 20, r: 20, t: 10, b: 10, pad: 0 },\n            paper_bgcolor: 'rgb(97, 92, 87)',\n            plot_bgcolor: 'rgb(97, 92, 87)',\n            font: { family: \"Arial\", size: \"15\", color: \"rgb(253, 237, 165)\" },\n            xaxis: { showticklabels: false },\n            yaxis: { range: [0, 10], zerolinecolor: \"rgb(253, 237, 165)\", dtick: .5 }\n          },\n          style: { width: \"100%\", height: \"100%\" },\n          config: { responsive: true },\n          titles: title,\n          years: year,\n          age_ratings: age_rating,\n          imdb_ratings: imdb_rating,\n          on_netflixs: on_netflix\n        });\n      })\n  }\n  handleClick1() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 5),\n        y: this.state.imdb_ratings.slice(0, 5),\n        text: this.state.titles.slice(0, 5),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n    })\n  };\n  handleClick2() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 10),\n        y: this.state.imdb_ratings.slice(0, 10),\n        text: this.state.titles.slice(0, 10),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n    })\n  };\n  handleClick3() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 15),\n        y: this.state.imdb_ratings.slice(0, 15),\n        text: this.state.titles.slice(0, 15),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n    })\n  };\n  handleClick4() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 20),\n        y: this.state.imdb_ratings.slice(0, 20),\n        text: this.state.titles.slice(0, 20),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n    })\n  };\n  handleClick5() {\n    this.setState({\n      data: [{\n        x: this.state.titles.slice(0, 50),\n        y: this.state.imdb_ratings.slice(0, 50),\n        text: this.state.titles.slice(0, 50),\n        textposition: 'auto',\n        textangle: 90,\n        type: 'bar',\n        marker: { color: \"#5f9ea0\" }\n      }],\n    })\n  };\n\n  render() {\n    return (\n      <section>\n        <p className='m-pltttle'>Neftlix IMDB Ratings</p>\n        <p className='m-pltsttle'>Use the chart toolbar and buttons to manipulate the chart.  When adding new movies to compare, scroll right to view the added movies.</p>\n        <div className='m-plottyboi'>\n          <Plot\n            data={this.state.data}\n            layout={this.state.layout}\n            config={this.state.config}\n            onInitialized={(figure) => this.setState(figure)}\n            onUpdate={(figure) => this.setState(figure)}\n          />\n        </div>\n        <div className='m-btns'>\n          <p className='m-btntitle'>How many movies would you like to compare?</p>\n          <ul className='m-btnlst'>\n            <button className='m-btn1' onClick={this.handleClick1}>5</button>\n            <button className='m-btn2' onClick={this.handleClick2}>10</button>\n            <button className='m-btn3' onClick={this.handleClick3}>15</button>\n            <button className='m-btn4' onClick={this.handleClick4}>20</button>\n            <button className='m-btn5' onClick={this.handleClick5}>50</button>\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\nexport default Mgraph;",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":14,"column":9,"nodeType":"129","messageId":"130","endLine":14,"endColumn":19},{"ruleId":"127","severity":1,"message":"131","line":15,"column":9,"nodeType":"129","messageId":"130","endLine":15,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":13,"column":9,"nodeType":"129","messageId":"130","endLine":13,"endColumn":19},{"ruleId":"127","severity":1,"message":"131","line":14,"column":9,"nodeType":"129","messageId":"130","endLine":14,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":18,"column":9,"nodeType":"129","messageId":"130","endLine":18,"endColumn":19},{"ruleId":"127","severity":1,"message":"131","line":19,"column":9,"nodeType":"129","messageId":"130","endLine":19,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":19,"column":11,"nodeType":"129","messageId":"130","endLine":19,"endColumn":21},{"ruleId":"127","severity":1,"message":"131","line":20,"column":11,"nodeType":"129","messageId":"130","endLine":20,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":17,"column":11,"nodeType":"129","messageId":"130","endLine":17,"endColumn":21},{"ruleId":"127","severity":1,"message":"131","line":18,"column":11,"nodeType":"129","messageId":"130","endLine":18,"endColumn":22},{"ruleId":"123","replacedBy":"132"},{"ruleId":"125","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":55,"column":34,"nodeType":"136","messageId":"137","endLine":55,"endColumn":35},{"ruleId":"134","severity":1,"message":"135","line":58,"column":44,"nodeType":"136","messageId":"137","endLine":58,"endColumn":45},{"ruleId":"134","severity":1,"message":"135","line":52,"column":44,"nodeType":"136","messageId":"137","endLine":52,"endColumn":45},{"ruleId":"127","severity":1,"message":"138","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":50,"column":34,"nodeType":"136","messageId":"137","endLine":50,"endColumn":35},{"ruleId":"134","severity":1,"message":"135","line":71,"column":44,"nodeType":"136","messageId":"137","endLine":71,"endColumn":45},{"ruleId":"127","severity":1,"message":"139","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":56,"column":34,"nodeType":"136","messageId":"137","endLine":56,"endColumn":35},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'isPortrait' is assigned a value but never used.","Identifier","unusedVar","'isLandscape' is assigned a value but never used.",["140"],["141"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useMediaQuery' is defined but never used.","'Mgraph2' is defined but never used.","no-global-assign","no-unsafe-negation"]